image: python:3.7.4-alpine3.10

definitions:
  step: &buildImage
    name: Build and Commit Image
    services:
      - docker
    caches:
      - pip
      - docker
    script:
      - pip3 install awscli
      - IMAGE="${AWS_URI}/${DOCKER_IMAGE}"
      - export IMAGE_TAG=$(echo $BITBUCKET_COMMIT | cut -c1-7)
      - aws configure set aws_access_key_id "${AWS_KEY}"
      - aws configure set aws_secret_access_key "${AWS_SECRET}"
      - eval $(aws ecr get-login --no-include-email --region ${AWS_REGION_DEFAULT} | sed 's;https://;;g')
      - docker build -t $IMAGE:$IMAGE_TAG .
      - docker push $IMAGE:$IMAGE_TAG

  step: &deployImage
    caches:
      - pip
    script:
      - apk add build-base autoconf jq gettext
      - pip3 install awscli
      - IMAGE="${AWS_URI}/${DOCKER_IMAGE}"
      - export IMAGE_TAG=$(echo $BITBUCKET_COMMIT | cut -c1-7)
      - export IMAGE_NAME="${AWS_URI}/${DOCKER_IMAGE}:${IMAGE_TAG}"
      - export AWS_ACCESS_KEY="${AWS_KEY}"
      - export AWS_ACCESS_SECRET="${AWS_SECRET}"
      - aws configure set aws_access_key_id "${AWS_KEY}"
      - aws configure set aws_secret_access_key "${AWS_SECRET}"
      - envsubst < task-definition.json >  task-definition-envsubst.json
      - export UPDATED_TASK_DEFINITION=$(aws ecs register-task-definition --region ${AWS_REGION_DEFAULT} --cli-input-json file://task-definition-envsubst.json | jq '.taskDefinition.taskDefinitionArn' --raw-output)
      - aws ecs update-service --region ${AWS_REGION_DEFAULT} --service ${AWS_ECS_SERVICE} --cluster ${AWS_ECS_CLUSTER} --task-definition ${UPDATED_TASK_DEFINITION}

pipelines:
  default:
      - step: *buildImage
  branches:
    dev:
      - step: *buildImage
      - step:
          <<: *deployImage
          deployment: dev
          name: Push to Dev Environment
    release/*:
      - step: *buildImage
      - step:
          <<: *deployImage
          deployment: Staging
          name: Push to Staging Environment
